
name: CI

on:
  push:
    branches:
      - "main"

jobs:
  cleanup-runs:
    name: Cleanup Currently Running Releases
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'


  lint-format-build:
    name: "Lint, format and build"
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v1

      # this is my own custom hack to find the last successful time this job was run
      - name: Find last successful deployment
        id: last_deployment
        env:
          SECRET: ${{secrets.GITHUB_TOKEN}}
        run: |
          LAST_DEPLOY=$(curl -H "Authorization: token $SECRET" https://api.github.com/repos/kylebjordahl/clickup-ng-table-demo/actions/workflows/ci.workflow.yml/runs\?status\=success\&per_page\=1\&branch=main )
          echo "$LAST_DEPLOY"
          LAST_DEPLOY_SHA=$(echo $LAST_DEPLOY | grep -Eo '"head_sha":.*?[^\\]",' | awk -F '"' '{print $4}')
          INITIAL_COMMIT=$(git rev-list --max-parents=0 HEAD)
          echo "::set-output name=sha::${LAST_DEPLOY_SHA:-${INITIAL_COMMIT:-HEAD~1}}"

      # not recommended in repos with complex dependencies
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: install node v14
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - run: npm install

      - run: npm i -g @nrwl/cli
        name: Install NX globally

      - name: Format Affected
        env:
          NX_BASE: ${{steps.last_deployment.outputs.sha}}
          NX_HEAD: ${{github.event.after}}
          NX_CLOUD_AUTH_TOKEN: ${{secrets.NX_CLOUD_AUTH_TOKEN}}
        run: nx format:check --base=${NX_BASE} --head=${NX_HEAD}

      - name: Lint Affected
        env:
          NX_BASE: ${{steps.last_deployment.outputs.sha}}
          NX_HEAD: ${{github.event.after}}
          NX_CLOUD_AUTH_TOKEN: ${{secrets.NX_CLOUD_AUTH_TOKEN}}
        run: nx affected:lint --base=${NX_BASE} --head=${NX_HEAD}

      - name: Build Affected
        env:
          NX_BASE: ${{steps.last_deployment.outputs.sha}}
          NX_HEAD: ${{github.event.after}}
          NX_CLOUD_AUTH_TOKEN: ${{secrets.NX_CLOUD_AUTH_TOKEN}}
        run: nx affected:build --prod --showCircularDependencies=false --base=${NX_BASE} --head=${NX_HEAD}

  e2e:
    name: "End-to-end tests (Cypress)"
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v1

      # this is my own custom hack to find the last successful time this job was run
      - name: Find last successful deployment
        id: last_deployment
        env:
          SECRET: ${{secrets.GITHUB_TOKEN}}
        run: |
          LAST_DEPLOY=$(curl -H "Authorization: token $SECRET" https://api.github.com/repos/kylebjordahl/clickup-ng-table-demo/actions/workflows/ci.workflow.yml/runs\?status\=success\&per_page\=1\&branch=${BRANCH} )
          echo "$LAST_DEPLOY"
          LAST_DEPLOY_SHA=$(echo $LAST_DEPLOY | grep -Eo '"head_sha":.*?[^\\]",' | awk -F '"' '{print $4}')
          INITIAL_COMMIT=$(git rev-list --max-parents=0 HEAD)
          echo "::set-output name=sha::${LAST_DEPLOY_SHA:-${INITIAL_COMMIT:-HEAD~1}}"

      # not recommended in repos with complex dependencies
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: install node v14
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - run: npm install

      - run: npm i -g @nrwl/cli
        name: Install NX globally

      - name: E2E Affected
        env:
          NX_BASE: ${{steps.last_deployment.outputs.sha}}
          NX_HEAD: ${{github.event.after}}
          NX_CLOUD_AUTH_TOKEN: ${{secrets.NX_CLOUD_AUTH_TOKEN}}
        run: nx affected:e2e --prod --base=${NX_BASE} --head=${NX_HEAD}

  deploy:
    name: "Deployment"
    runs-on: ubuntu-latest
    needs: [e2e, lint-format-build]

    if: "!contains(github.event.head_commit.message, '[skip-ci]') && !contains(github.event.head_commit.message, '[skip-deploy]')"

    steps:
      - uses: actions/checkout@v1

      # this is my own custom hack to find the last successful time this job was run
      - name: Find last successful deployment
        id: last_deployment
        env:
          SECRET: ${{secrets.GITHUB_TOKEN}}
        run: |
          LAST_DEPLOY=$(curl -H "Authorization: token $SECRET" https://api.github.com/repos/kylebjordahl/clickup-ng-table-demo/actions/workflows/ci.workflow.yml/runs\?status\=success\&per_page\=1\&branch=${BRANCH} )
          echo "$LAST_DEPLOY"
          LAST_DEPLOY_SHA=$(echo $LAST_DEPLOY | grep -Eo '"head_sha":.*?[^\\]",' | awk -F '"' '{print $4}')
          INITIAL_COMMIT=$(git rev-list --max-parents=0 HEAD)
          echo "::set-output name=sha::${LAST_DEPLOY_SHA:-${INITIAL_COMMIT:-HEAD~1}}"

      # not recommended in repos with complex dependencies
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: install node v14
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - run: npm install

      - run: npm i -g @nrwl/cli
        name: Install NX globally

      - name: Deploy Affected
        env:
          NX_BASE: ${{steps.last_deployment.outputs.sha}}
          NX_HEAD: ${{github.event.after}}
          NX_CLOUD_AUTH_TOKEN: ${{secrets.NX_CLOUD_AUTH_TOKEN}}
        run: nx affected:deploy --base=${NX_BASE} --head=${NX_HEAD}
